/*
auto-generated by: https://github.com/react-spring/gltfjsx
author: XNdrive (https://sketchfab.com/XNdrive)
license: CC-BY-SA-4.0 (http://creativecommons.org/licenses/by-sa/4.0/)
source: https://sketchfab.com/3d-models/low-poly-tree-1-b512acc620ab4040ae942886ac5146f5
title: Low Poly Tree 1
*/

import React from 'react'
import { useLoader } from 'react-three-fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'

export default function Tree(props) {
  const { nodes, materials } = useLoader(GLTFLoader, '/models/pine/scene.gltf')
  const { scale = [1, 1, 1] } = props;
  nodes.tree_trunk001_0.geometry.computeBoundingBox();
  const z = nodes.tree_leaves001_0.geometry.boundingBox.min.z * scale[1];

  return (
    <group rotation={[-Math.PI / 2, 0, 0]} {...props} scale={scale} dispose={null}>
      <mesh geometry={nodes.tree_leaves001_0.geometry} position={[0, 0, -z]} castShadow receiveShadow>
        <meshPhysicalMaterial attach="material" color="green" />
      </mesh>
      <mesh material={materials['trunk.001']} geometry={nodes.tree_trunk001_0.geometry} position={[0, 0, -z]} castShadow receiveShadow />
    </group>
  )
}
